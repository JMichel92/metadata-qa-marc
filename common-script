#!/usr/bin/env bash

PREFIX=${BASE_INPUT_DIR}/_reports/${NAME}
OUTPUT_DIR=${BASE_OUTPUT_DIR}/${NAME}

echo "Logging to ${PREFIX}.log"

if [ ! -d ${OUTPUT_DIR} ]; then
  mkdir -p ${OUTPUT_DIR}
fi

do_validate() {
  GENERAL_PARAMS="--details --summary --format csv --defaultRecordType BOOKS" 
  OUTPUT_PARAMS="--fileName ${OUTPUT_DIR}/details.csv --summaryFileName ${OUTPUT_DIR}/summary.csv"

  echo "./validator ${GENERAL_PARAMS} ${OUTPUT_PARAMS} ${TYPE_PARAMS} ${MARC_DIR}/${MASK} 2> ${PREFIX}.log"

  ./validator ${GENERAL_PARAMS} ${OUTPUT_PARAMS} ${TYPE_PARAMS} ${MARC_DIR}/$MASK 2> ${PREFIX}.log
}

do_prepare_solr() {
  ./prepare-solr $NAME 2> ${PREFIX}.log
}

do_index() {
  ./index $NAME ${MARC_DIR} $MASK --with-delete 2> ${PREFIX}.log
}

do_completeness() {
  echo "./completeness --defaultRecordType BOOKS ${TYPE_PARAMS} --outputDir ${OUTPUT_DIR}/ ${MARC_DIR}/${MASK} 2> ${PREFIX}.log"
  ./completeness --defaultRecordType BOOKS ${TYPE_PARAMS} --outputDir ${OUTPUT_DIR}/ ${MARC_DIR}/${MASK} 2> ${PREFIX}.log
}

do_classifications() {
  echo "./classifications --defaultRecordType BOOKS ${TYPE_PARAMS} --outputDir ${OUTPUT_DIR}/ ${MARC_DIR}/${MASK} 2> ${PREFIX}.log"
  ./classifications --defaultRecordType BOOKS ${TYPE_PARAMS} --outputDir ${OUTPUT_DIR}/ ${MARC_DIR}/${MASK} 2> ${PREFIX}.log
}

do_tt_completeness() {
  ./tt-completeness --defaultRecordType BOOKS --outputDir ${OUTPUT_DIR}/ ${MARC_DIR}/${MASK} 2> ${PREFIX}.log
}

do_format() {
  ./formatter --defaultRecordType BOOKS ${MARC_DIR}/${MASK}
}

do_functional_analysis() {
  echo "./functional-analysis --defaultRecordType BOOKS ${TYPE_PARAMS} --outputDir ${OUTPUT_DIR}/ ${MARC_DIR}/${MASK} 2> ${PREFIX}.log"
  ./functional-analysis --defaultRecordType BOOKS ${TYPE_PARAMS} --outputDir ${OUTPUT_DIR}/ ${MARC_DIR}/${MASK} 2> ${PREFIX}.log
}

case "$1" in
  validate)
    do_validate
    ;;
  prepare-solr)
    do_prepare_solr
    ;;
  index)
    do_index
    ;;
  completeness)
    do_completeness
    ;;
  classifications)
    do_classifications
    ;;
  tt-completeness)
    do_tt_completeness
    ;;
  format)
    do_format
    ;;
  functional-analysis)
    do_functional_analysis
    ;;
  all-analyses)
    do_validate
    do_completeness
    do_tt_completeness
    do_functional_analysis
    ;;
esac
